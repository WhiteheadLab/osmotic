version
packageStatus()
.libPaths()
source("http://bioconductor.org/biocLite.R")
biocLite("conumee")
library("optparse")
library("rmarkdown")
install.packages("manipulate")
install.packages(c("rmarkdown", "optparse", "knitr"))
library("rmarkdown")
library("knitr")
library(RCurl)
library(ggplot)
library(ggplot2)
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/visualizations/datasets/fly_data.txt")
dataset<-read.table(textConnection(getURL(URL)),header=T,check.names=F,sep="\t")
ggplot(dataset)+geom_density(aes(x=FBgn0000022,fill=fly,alpha=0.5))
gglot(dataset)+geom_density
ggplot(dataset)+geom_histogram(aes(x=FBgn0000022,fill=fly,alpha=0.5))
ggplot(dataset)+geom_histogram(aes(x=FBgn0000022,fill=fly,alpha=0.5))
names(dataset)
names(dataset)[1:50]
ggplot(dataset)+geom_histogram(aes(x=FBgn0000056,fill=fly,alpha=0.5))
?geom_histogram
install.packages("vegan")
library(vegan)
adonis(dataset[,-c(1:3)]~dataset$fly*dataset$type)
head(dataset[,1:10])
?adonis
adonis(decostand(dataset[,-c(1:3)],method="total")~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method=c("pa","jaccard")~dataset$fly*dataset$type)
)
adonis(decostand(dataset[,-c(1:3)],method=c("pa","jaccard"))~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method="pa",method="jaccard")~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method="pa")~dataset$fly*dataset$type,method="jaccard")
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/multivariate-viz/fly_data_with_unknowns.txt")
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/visualizations/multivariate-viz/fly_data_with_unknowns.txt")
dataset<-read.table(textConnection(getURL(URL)),header=T,check.names=F,sep="\t")
dim(dataset)
head(dataset[,1:10])
tail(dataset[,1:10])
mds<-metaMDS(dataset[,-c(1:4)],distance="bray",autotransform=F,k=3 )
sc<-data.frame(scores(mds),dataset[,1:3])
head(sc)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,shape=fly,colour=type))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,shape=type,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=rnorm(52)))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2),colour=rnorm(52))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2),colour=fly)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,size=2,colour=fly))
sc$fly
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,size=2,colour=info))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info),size=2)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info,shape=type),size=2)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info,shape=type),size=3)
pca<-capscale(dataset[,-c(1:4)]~1)
pca
eigs<-eigenvals(pca)
eigs/sum(eigs)
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (75.9% of variation explained)",y="MDS1 (5.8% of variation explained)")
sc<-data.frame(scores(pca)$sites,dataset[,1:4])
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (75.9% of variation explained)",y="MDS1 (5.8% of variation explained)")
eigenvals(pca)
sum(eigs)
eigs/sum(eigs)
pcoa<-capscale(decostand(dataset[,-c(1:4)],"total")~1,distance="bray")
pcoa
eigs<-eigenvals(pcoa)
eigs/sum(eigs)
sc<-data.frame(scores(pcoa)$sites,dataset[,1:4])
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (33.0% of variation explained)",y="MDS1 (8.2% of variation explained)")
pcoa<-capscale(decostand(dataset[,-c(1:4)],"total")~dataset$fly,distance="bray")
scores(pcoa)$centroids
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (33.0% of variation explained)",y="MDS1 (8.2% of variation explained)")+annotate("text",x=c(-.157,-.077,.17),y=c(-.004,.670,.156),label=c("HYB","ORE","SAM"))
source("http://bioconductor.org/biocLite.R")
biocLite(c("pathview", "edgeR", "gage"))
100*1132416/152126075
(76)(5346216)/(152126075)
76*5346216/152126075
100*17074344/152126075
76*(5346216/4)/152126075
100*(1132416/4)/152126075
76*(5346216/4)/152126075
100*(17074344/4)/152126075
library(DESeq2)
library(RColorBrewer)
library(gplots)
source('~/Documents/scripts/plotPCAWithSampleNames.R')
source('~/Documents/scripts/overLapper_original.R')
setwd("~/Documents/UCDavis/osmotic")
data.1<-read.csv("killifish_allcounts.csv")
annotation<-read.table("kfish2rae5g.annotation.transcript.name.id")
annotation<-read.table("kfish2rae5g.annotation.transcript.name.id", sep="\t")
head(annotation)
annotation<-read.table("kfish2rae5g.annotation.transcript.name.id", sep="\t")
head(annotation)
kfish_annotation<-read.table("kfish2rae5g.annotation.transcript.name.id", sep="\t")
head(kfish_annotation)
?read.table()
kfish_annotation<-read.table("kfish2rae5g.annotation.transcript.name.id", sep="\t",header=FALSE)
kfish_annotation<-read.table("kfish2rae5g.annotation.transcript.name.id", sep="\t",fill=TRUE,header=FALSE)
kfish_annotation<-read.table("kfish2rae5g.annotation.transcript.name.id", fill=TRUE,header=FALSE)
head(kfish_annotation)
annotation<-read.table("kfish2rae5g.annotation.transcript.name.id", fill=TRUE,header=FALSE)
colnames(annotation)<-c("id","gene")
annotation_paste<-paste(annotation$V2,annotation$V3,sep=" ")
head(annotation_paste)
annotation$new<-paste(annotation$V2,annotation$V3,sep=" ")
head(annotation)
annotation<-read.table("kfish2rae5g.annotation.transcript.name.id", fill=TRUE,header=FALSE)
head(data.1)
colnames(data.1)
id<-data.1$GeneID
rownames(data.1)<-id
head(data.1)
F_similis<-data.1[,c(99:107)]
colnames(F_similis)
col.names<-colnames(F_similis)
head(F_similis)
conditions = sapply(strsplit(col.names,"_"),`[`,4)
genus = sapply(strsplit(col.names,"_"),`[`,1)
species = sapply(strsplit(col.names,"_"),`[`,2)
genus_species = paste(genus,species,sep="_")
pop = sapply(strsplit(col.names,"_"),`[`,3)
genus_species_pop = paste(genus_species,pop,sep=".")
genus_species = gsub(".NA", "", genus_species_pop)
ExpDesign <- data.frame(row.names=colnames(F_similis), condition = conditions,genus_species = genus_species)
ExpDesign
cds<-DESeqDataSetFromMatrix(countData=F_similis,
colData=ExpDesign,design= ~ condition)
cds<-DESeq(cds, betaPrior=FALSE)
log_cds<-rlog(cds)
plotPCAWithSampleNames(log_cds,intgroup="condition",ntop=40000)
res.1<-results(cds,contrast=c("condition","BW","FW"))
dim(res.1)
res.2<-results(cds,contrast=c("condition","transfer","FW"))
res.3<-results(cds,contrast=c("condition","transfer","BW"))
resultsNames(cds)
res1_ordered <-as.data.frame(res.1[order(res.1$padj),])
dim(res1_ordered)
res1_filtered <-subset(res1_ordered,res1_ordered$padj<0.05)
res1_filtered <-subset(res1_filtered,res1_filtered$log2FoldChange>1 | res1_filtered$log2FoldChange< -1)
id<-rownames(res1_filtered)
res1_filtered<-cbind(res1_filtered,id)
dim(res1_filtered)
res2_ordered <-as.data.frame(res.2[order(res.2$padj),])
res2_filtered<-subset(res2_ordered,res2_ordered$padj<0.05)
res2_filtered <-subset(res2_filtered,res2_filtered$log2FoldChange>1 | res2_filtered$log2FoldChange< -1)
id<-rownames(res2_filtered)
res2_filtered<-cbind(res2_filtered,id)
res3_ordered<-as.data.frame(res.3[order(res.3$padj),])
res3_filtered<-subset(res3_ordered,res3_ordered$padj<0.05)
res3_filtered <-subset(res3_filtered,res3_filtered$log2FoldChange>1 | res3_filtered$log2FoldChange< -1)
id<-rownames(res3_filtered)
res3_filtered<-cbind(res3_filtered,id)
# get normalized counts
# add id column
F_similis<-counts(cds,normalized=TRUE)
id<-rownames(F_similis_norm_counts)
F_similis_norm_counts<-counts(cds,normalized=TRUE)
id<-rownames(F_similis_norm_counts)
F_similis_norm_counts<-cbind(F_similis_norm_counts,id)
# merge res1, res2, res3 with counts
# "BW","FW"
res1_df<-as.data.frame(res.1)
colnames(res1_df)<-paste(colnames(res1_df),"BW_FW", sep='.')
id<-rownames(res1_df)
res1_df<-cbind(res1_df,id)
dim(res1_df)
# "transfer","FW"
res2_df<-as.data.frame(res.2)
colnames(res2_df)<-paste(colnames(res2_df),"transfer_FW", sep='.')
id<-rownames(res2_df)
res2_df<-cbind(res2_df,id)
dim(res2_df)
# "transfer","BW"
res3_df<-as.data.frame(res.3)
colnames(res3_df)<-paste(colnames(res3_df),"transfer_BW", sep='.')
id<-rownames(res3_df)
res3_df<-cbind(res3_df,id)
dim(res3_df)
F_similis_res<-merge(F_heteroclitus.MDPL_norm_counts,res1_df,by="id")
dim(F_similis_res)
F_similis_res<-merge(F_similis_norm_counts,res1_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
F_similis_res<-merge(F_similis_res,res2_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
F_similis_res<-merge(F_similis_res,res3_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
F_similis_res<-F_similis_res[complete.cases(F_similis_res),]
dim(F_similis_res)
F_similis_annotated<-merge(F_similis_res,annotation,by="id")
colnames(F_similis_res)
dim(F_similis_res)
F_similis_res<-merge(F_similis_norm_counts,res1_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
F_similis_res<-merge(F_similis_res,res2_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
F_similis_res<-merge(F_similis_res,res3_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
head(F_similis_res)
# remove rows with NA
F_similis_res<-F_similis_res[complete.cases(F_similis_res),]
dim(F_similis_res)
colnames(F_similis_res)
head(annotation)
colnames(annotation)<-c("id","gene")
F_similis_annotated<-merge(F_similis_res,annotation,by="id")
F_similis_annotated<-F_similis_annotated[,c(ncol(F_similis_annotated),1:(ncol(F_similis_annotated)-1))]
write.csv(F_similis_annotated,"F_similis_results_all.csv")
F_similis_annotated<-merge(F_similis_res,annotation,by="id")
#F_similis_annotated<-F_similis_annotated[,c(ncol(F_similis_annotated),1:(ncol(F_similis_annotated)-1))]
write.csv(F_similis_annotated,"F_similis_results_all.csv")
plot(log2(res.1$baseMean), res.1$log2FoldChange,
col=ifelse(res.1$padj < 0.05, "red","gray67"),
main="F. similis (BW vs. FW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
plot(log2(res.2$baseMean), res.2$log2FoldChange,
col=ifelse(res.2$padj < 0.05, "red","gray67"),
main="F. similis (transfer vs. FW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
plot(log2(res.3$baseMean), res.3$log2FoldChange,
col=ifelse(res.3$padj < 0.05, "red","gray67"),
main="F. similis (transfer vs. BW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
m<-res1_filtered$id
length(m)
n<-res2_filtered$id
length(n)
o<-res3_filtered$id
length(o)
setlist <- list(BW_FW=as.vector(m),transfer_FW=as.vector(n),transfer_BW=as.vector(o))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets")
counts <- sapply(OLlist$Venn_List, length)
vennPlot(counts=counts)
F_heteroclitus.MDPL<-data.1[,c(41:49)]
colnames(F_heteroclitus.MDPL)
col.names<-colnames(F_heteroclitus.MDPL)
head(F_heteroclitus.MDPL)
conditions = sapply(strsplit(col.names,"_"),`[`,4)
genus = sapply(strsplit(col.names,"_"),`[`,1)
species = sapply(strsplit(col.names,"_"),`[`,2)
genus_species = paste(genus,species,sep="_")
pop = sapply(strsplit(col.names,"_"),`[`,3)
genus_species_pop = paste(genus_species,pop,sep=".")
genus_species = gsub(".NA", "", genus_species_pop)
ExpDesign <- data.frame(row.names=colnames(F_heteroclitus.MDPL), condition = conditions,genus_species = genus_species)
ExpDesign
cds<-DESeqDataSetFromMatrix(countData=F_heteroclitus.MDPL,
colData=ExpDesign,design= ~ condition)
cds<-DESeq(cds, betaPrior=FALSE)
log_cds<-rlog(cds)
plotPCAWithSampleNames(log_cds,intgroup="condition",ntop=40000)
res.1<-results(cds,contrast=c("condition","BW","FW"))
dim(res.1)
res.2<-results(cds,contrast=c("condition","transfer","FW"))
res.3<-results(cds,contrast=c("condition","transfer","BW"))
resultsNames(cds)
res1_ordered <-as.data.frame(res.1[order(res.1$padj),])
dim(res1_ordered)
res1_filtered <-subset(res1_ordered,res1_ordered$padj<0.05)
res1_filtered <-subset(res1_filtered,res1_filtered$log2FoldChange>1 | res1_filtered$log2FoldChange< -1)
id<-rownames(res1_filtered)
res1_filtered<-cbind(res1_filtered,id)
dim(res1_filtered)
res2_ordered <-as.data.frame(res.2[order(res.2$padj),])
res2_filtered<-subset(res2_ordered,res2_ordered$padj<0.05)
res2_filtered <-subset(res2_filtered,res2_filtered$log2FoldChange>1 | res2_filtered$log2FoldChange< -1)
id<-rownames(res2_filtered)
res2_filtered<-cbind(res2_filtered,id)
res3_ordered<-as.data.frame(res.3[order(res.3$padj),])
res3_filtered<-subset(res3_ordered,res3_ordered$padj<0.05)
res3_filtered <-subset(res3_filtered,res3_filtered$log2FoldChange>1 | res3_filtered$log2FoldChange< -1)
id<-rownames(res3_filtered)
res3_filtered<-cbind(res3_filtered,id)
# get normalized counts
# add id column
F_heteroclitus.MDPL_norm_counts<-counts(cds,normalized=TRUE)
id<-rownames(F_heteroclitus.MDPL_norm_counts)
F_heteroclitus.MDPL_norm_counts<-cbind(F_heteroclitus.MDPL_norm_counts,id)
# merge res1, res2, res3 with counts
# "BW","FW"
res1_df<-as.data.frame(res.1)
colnames(res1_df)<-paste(colnames(res1_df),"BW_FW", sep='.')
id<-rownames(res1_df)
res1_df<-cbind(res1_df,id)
dim(res1_df)
# "transfer","FW"
res2_df<-as.data.frame(res.2)
colnames(res2_df)<-paste(colnames(res2_df),"transfer_FW", sep='.')
id<-rownames(res2_df)
res2_df<-cbind(res2_df,id)
dim(res2_df)
# "transfer","BW"
res3_df<-as.data.frame(res.3)
colnames(res3_df)<-paste(colnames(res3_df),"transfer_BW", sep='.')
id<-rownames(res3_df)
res3_df<-cbind(res3_df,id)
dim(res3_df)
F_heteroclitus.MDPL_res<-merge(F_heteroclitus.MDPL_norm_counts,res1_df,by="id")
dim(F_heteroclitus.MDPL_res)
colnames(F_heteroclitus.MDPL_res)
F_heteroclitus.MDPL_res<-merge(F_heteroclitus.MDPL_res,res2_df,by="id")
dim(F_heteroclitus.MDPL_res)
colnames(F_heteroclitus.MDPL_res)
F_heteroclitus.MDPL_res<-merge(F_heteroclitus.MDPL_res,res3_df,by="id")
dim(F_heteroclitus.MDPL_res)
colnames(F_heteroclitus.MDPL_res)
F_heteroclitus.MDPL_res<-F_heteroclitus.MDPL_res[complete.cases(F_heteroclitus.MDPL_res),]
dim(F_heteroclitus.MDPL_res)
F_heteroclitus.MDPL_annotated<-merge(F_heteroclitus.MDPL_res,annotation,by="id")
F_heteroclitus.MDPL_annotated<-F_heteroclitus.MDPL_annotated[,c(ncol(F_heteroclitus.MDPL_annotated),1:(ncol(F_heteroclitus.MDPL_annotated)-1))]
#write.csv(F_heteroclitus.MDPL_annotated,"F_heteroclitus.MDPL_results_all.csv")
plot(log2(res.1$baseMean), res.1$log2FoldChange,
col=ifelse(res.1$padj < 0.05, "red","gray67"),
main="F. heteroclitus.MDPL (BW vs. FW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
plot(log2(res.2$baseMean), res.2$log2FoldChange,
col=ifelse(res.2$padj < 0.05, "red","gray67"),
main="F. heteroclitus.MDPL (transfer vs. FW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
plot(log2(res.3$baseMean), res.3$log2FoldChange,
col=ifelse(res.3$padj < 0.05, "red","gray67"),
main="F. heteroclitus.MDPL (transfer vs. BW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
m<-res1_filtered$id
length(m)
n<-res2_filtered$id
length(n)
o<-res3_filtered$id
length(o)
setlist <- list(BW_FW=as.vector(m),transfer_FW=as.vector(n),transfer_BW=as.vector(o))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets")
counts <- sapply(OLlist$Venn_List, length)
vennPlot(counts=counts)
colnames(F_similis)
colnames(data.1)
F_similis<-data.1[,c(99:101,103:7)]
colnames(F_similis)
F_similis<-data.1[,c(99:101,103:107)]
colnames(F_similis)
col.names<-colnames(F_similis)
head(F_similis)
conditions = sapply(strsplit(col.names,"_"),`[`,4)
genus = sapply(strsplit(col.names,"_"),`[`,1)
species = sapply(strsplit(col.names,"_"),`[`,2)
genus_species = paste(genus,species,sep="_")
pop = sapply(strsplit(col.names,"_"),`[`,3)
genus_species_pop = paste(genus_species,pop,sep=".")
genus_species = gsub(".NA", "", genus_species_pop)
ExpDesign <- data.frame(row.names=colnames(F_similis), condition = conditions,genus_species = genus_species)
ExpDesign
cds<-DESeqDataSetFromMatrix(countData=F_similis,
colData=ExpDesign,design= ~ condition)
cds<-DESeq(cds, betaPrior=FALSE)
log_cds<-rlog(cds)
plotPCAWithSampleNames(log_cds,intgroup="condition",ntop=40000)
res.1<-results(cds,contrast=c("condition","BW","FW"))
dim(res.1)
res.2<-results(cds,contrast=c("condition","transfer","FW"))
res.3<-results(cds,contrast=c("condition","transfer","BW"))
resultsNames(cds)
res1_ordered <-as.data.frame(res.1[order(res.1$padj),])
dim(res1_ordered)
res1_filtered <-subset(res1_ordered,res1_ordered$padj<0.05)
res1_filtered <-subset(res1_filtered,res1_filtered$log2FoldChange>1 | res1_filtered$log2FoldChange< -1)
id<-rownames(res1_filtered)
res1_filtered<-cbind(res1_filtered,id)
dim(res1_filtered)
res2_ordered <-as.data.frame(res.2[order(res.2$padj),])
res2_filtered<-subset(res2_ordered,res2_ordered$padj<0.05)
res2_filtered <-subset(res2_filtered,res2_filtered$log2FoldChange>1 | res2_filtered$log2FoldChange< -1)
id<-rownames(res2_filtered)
res2_filtered<-cbind(res2_filtered,id)
res3_ordered<-as.data.frame(res.3[order(res.3$padj),])
res3_filtered<-subset(res3_ordered,res3_ordered$padj<0.05)
res3_filtered <-subset(res3_filtered,res3_filtered$log2FoldChange>1 | res3_filtered$log2FoldChange< -1)
id<-rownames(res3_filtered)
res3_filtered<-cbind(res3_filtered,id)
# get normalized counts
# add id column
F_similis_norm_counts<-counts(cds,normalized=TRUE)
id<-rownames(F_similis_norm_counts)
F_similis_norm_counts<-cbind(F_similis_norm_counts,id)
# merge res1, res2, res3 with counts
# "BW","FW"
res1_df<-as.data.frame(res.1)
colnames(res1_df)<-paste(colnames(res1_df),"BW_FW", sep='.')
id<-rownames(res1_df)
res1_df<-cbind(res1_df,id)
dim(res1_df)
# "transfer","FW"
res2_df<-as.data.frame(res.2)
colnames(res2_df)<-paste(colnames(res2_df),"transfer_FW", sep='.')
id<-rownames(res2_df)
res2_df<-cbind(res2_df,id)
dim(res2_df)
# "transfer","BW"
res3_df<-as.data.frame(res.3)
colnames(res3_df)<-paste(colnames(res3_df),"transfer_BW", sep='.')
id<-rownames(res3_df)
res3_df<-cbind(res3_df,id)
dim(res3_df)
F_similis_res<-merge(F_similis_norm_counts,res1_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
F_similis_res<-merge(F_similis_res,res2_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
F_similis_res<-merge(F_similis_res,res3_df,by="id")
dim(F_similis_res)
colnames(F_similis_res)
head(F_similis_res)
# remove rows with NA
F_similis_res<-F_similis_res[complete.cases(F_similis_res),]
dim(F_similis_res)
F_similis_annotated<-merge(F_similis_res,annotation,by="id")
#F_similis_annotated<-F_similis_annotated[,c(ncol(F_similis_annotated),1:(ncol(F_similis_annotated)-1))]
write.csv(F_similis_annotated,"F_similis_results_all.csv")
plot(log2(res.1$baseMean), res.1$log2FoldChange,
col=ifelse(res.1$padj < 0.05, "red","gray67"),
main="F. similis (BW vs. FW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
plot(log2(res.2$baseMean), res.2$log2FoldChange,
col=ifelse(res.2$padj < 0.05, "red","gray67"),
main="F. similis (transfer vs. FW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
plot(log2(res.3$baseMean), res.3$log2FoldChange,
col=ifelse(res.3$padj < 0.05, "red","gray67"),
main="F. similis (transfer vs. BW) (padj<0.05)",xlim=c(1,15),pch=20,cex=1)
abline(h=c(-1,1), col="blue")
m<-res1_filtered$id
length(m)
n<-res2_filtered$id
length(n)
o<-res3_filtered$id
length(o)
setlist <- list(BW_FW=as.vector(m),transfer_FW=as.vector(n),transfer_BW=as.vector(o))
OLlist <- overLapper(setlist=setlist, sep="", type="vennsets")
counts <- sapply(OLlist$Venn_List, length)
vennPlot(counts=counts)
names(OLlist$Venn_List)
length(all_overlap)
